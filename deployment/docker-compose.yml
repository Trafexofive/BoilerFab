services:
  boilerfab-service:
    build:
      context: ../
      dockerfile: build/Dockerfile
    image: boilerfab:latest
    container_name: boilerfab-service
    restart: unless-stopped
    
    # Environment configuration
    environment:
      - SERVICE_NAME=BoilerFab Template Service
      - SERVICE_HOST=0.0.0.0
      - SERVICE_PORT=8000
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - DEBUG_MODE=${DEBUG_MODE:-false}
      - TEMPLATES_DIR=/app/templates
    
    # Port mapping
    ports:
      - "${SERVICE_PORT:-8000}:8000"
    
    # Volumes - organized paths
    volumes:
      - ../services:/app/services
      - ../templates:/app/templates:rw
      - ../config/settings.yaml:/app/settings.yaml:ro
      - ../runtime/api_config.json:/app/api_config.json:rw
      - ../runtime/logs:/app/logs:rw
      - ../runtime/backups:/app/backups:rw
    
    # Health check with proper endpoint
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
    # Networks
    networks:
      - boilerfab-net
    
    # Labels for your universal Makefile
    labels:
      - "com.docker.compose.project=boilerfab"
      - "service.name=boilerfab-service"
      - "service.type=api"

  # Optional services (use profiles to enable)
  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD:-boilerfab-redis}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - boilerfab-net
    profiles:
      - caching
    labels:
      - "com.docker.compose.project=boilerfab"

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=boilerfab
      - POSTGRES_USER=boilerfab
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-boilerfab-db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - boilerfab-net
    profiles:
      - database
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U boilerfab"]
      interval: 10s
      timeout: 5s
      retries: 5
    labels:
      - "com.docker.compose.project=boilerfab"

  # Lightweight monitoring - Simple metrics dashboard
  dozzle:
    image: amir20/dozzle:latest
    ports:
      - "9999:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - DOZZLE_LEVEL=info
      - DOZZLE_TAILSIZE=300
    networks:
      - boilerfab-net
    profiles:
      - monitoring
    labels:
      - "com.docker.compose.project=boilerfab"
      - "monitoring.type=logs"

  # Simple health monitoring dashboard  
  uptime-kuma:
    image: louislam/uptime-kuma:1-alpine
    ports:
      - "3001:3001"
    volumes:
      - uptime_data:/app/data
    networks:
      - boilerfab-net
    profiles:
      - monitoring
    restart: unless-stopped
    labels:
      - "com.docker.compose.project=boilerfab"
      - "monitoring.type=uptime"

volumes:
  redis_data:
    labels:
      - "com.docker.compose.project=boilerfab"
  postgres_data:
    labels:
      - "com.docker.compose.project=boilerfab"
  uptime_data:
    labels:
      - "com.docker.compose.project=boilerfab"

networks:
  boilerfab-net:
    driver: bridge
    labels:
      - "com.docker.compose.project=boilerfab"